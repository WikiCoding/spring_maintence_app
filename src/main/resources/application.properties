spring.application.name=maintenance

server.port=9090

# running local
#spring.datasource.url=jdbc:postgresql://localhost:5555/maintenance-db
# docker
spring.datasource.url=jdbc:postgresql://app-db:5432/maintenance-db
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true

# running local
#spring.kafka.bootstrap-servers=localhost:9092
# docker
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.group-id=manager-notifications
spring.kafka.consumer.auto-offset-reset=earliest

security.jwt.secret-key=3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b
# 1h in millisecond
security.jwt.expiration-time=3600000

# Redis config
spring.cache.type=redis
# running local
#spring.data.redis.host=localhost
# docker
spring.data.redis.host=redis
spring.data.redis.port=6379